{"ast":null,"code":"import { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../config/firebase\";\nimport { authActions } from \"../reducers/authReducer\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { toast } from \"react-toastify\";\nimport { getAuth } from \"firebase/auth\";\nexport const register = (email, password) => async dispatch => {\n  dispatch(authActions.signupStart());\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    dispatch(authActions.signupSuccess(userCredential.user));\n    toast.success(\"Signup successful!\");\n  } catch (error) {\n    dispatch(authActions.signupFailure(error.message));\n    toast.error(error.message);\n  }\n};\nexport const login = (email, password) => {\n  return async dispatch => {\n    dispatch(authActions.signupStart());\n    try {\n      const auth = getAuth();\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      dispatch(authActions.signupSuccess(userCredential.user));\n    } catch (error) {\n      dispatch(authActions.signupFailure(error.message));\n    }\n  };\n};","map":{"version":3,"names":["createUserWithEmailAndPassword","auth","authActions","signInWithEmailAndPassword","toast","getAuth","register","email","password","dispatch","signupStart","userCredential","signupSuccess","user","success","error","signupFailure","message","login"],"sources":["C:/Users/wadhe/OneDrive/Desktop/study/complete placment/Redux/project/scaffold/src/redux/actions/authActions.js"],"sourcesContent":["import { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../config/firebase\";\r\nimport {authActions} from \"../reducers/authReducer\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n  dispatch(authActions.signupStart());\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    dispatch(authActions.signupSuccess(userCredential.user));\r\n    toast.success(\"Signup successful!\");\r\n  } catch (error) {\r\n    dispatch(authActions.signupFailure(error.message));\r\n    toast.error(error.message);\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => {\r\n  return async (dispatch) => {\r\n    dispatch(authActions.signupStart());\r\n    try {\r\n      const auth = getAuth();\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      dispatch(authActions.signupSuccess(userCredential.user));\r\n    } catch (error) {\r\n      dispatch(authActions.signupFailure(error.message));\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,8BAA8B,QAAQ,eAAe;AAC9D,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SAASC,0BAA0B,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,eAAe;AAGvC,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC/DA,QAAQ,CAACP,WAAW,CAACQ,WAAW,CAAC,CAAC,CAAC;EACnC,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMX,8BAA8B,CAACC,IAAI,EAAEM,KAAK,EAAEC,QAAQ,CAAC;IAClFC,QAAQ,CAACP,WAAW,CAACU,aAAa,CAACD,cAAc,CAACE,IAAI,CAAC,CAAC;IACxDT,KAAK,CAACU,OAAO,CAAC,oBAAoB,CAAC;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAACP,WAAW,CAACc,aAAa,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC;IAClDb,KAAK,CAACW,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAACX,KAAK,EAAEC,QAAQ,KAAK;EACxC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACP,WAAW,CAACQ,WAAW,CAAC,CAAC,CAAC;IACnC,IAAI;MACF,MAAMT,IAAI,GAAGI,OAAO,CAAC,CAAC;MACtB,MAAMM,cAAc,GAAG,MAAMR,0BAA0B,CAACF,IAAI,EAAEM,KAAK,EAAEC,QAAQ,CAAC;MAC9EC,QAAQ,CAACP,WAAW,CAACU,aAAa,CAACD,cAAc,CAACE,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdN,QAAQ,CAACP,WAAW,CAACc,aAAa,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC;IACpD;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}